generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model employee {
  id                Int       @id @default(autoincrement())
  name              String    @db.VarChar(255)
  created_at        DateTime? @default(now()) @db.DateTime(0)
  deleted_at        DateTime? @db.DateTime(0)
  email             String?   @db.VarChar(100)
  id_user           Int?      @unique(map: "unique_id_user")
  id_role           Int?
  role              role?     @relation(fields: [id_role], references: [id], map: "fk_employee_role")
  employee_to_users users?    @relation("employee_id_userTousers", fields: [id_user], references: [id], map: "fk_employee_user")
  users_to_employee users?    @relation("users_id_employeeToemployee")

  @@index([id_role], map: "fk_employee_role")
}

model role {
  id         Int        @id @default(autoincrement())
  role_name  String     @db.VarChar(255)
  created_at DateTime?  @default(now()) @db.Timestamp(0)
  deleted_at DateTime?  @db.DateTime(0)
  employee   employee[]
}

model users {
  id                Int       @id @default(autoincrement())
  username          String    @unique(map: "unique_username") @db.VarChar(255)
  password          String    @db.Text
  created_at        DateTime? @default(now()) @db.DateTime(0)
  deleted_at        DateTime? @db.DateTime(0)
  salt              String?   @db.Text
  id_employee       Int?      @unique(map: "unique_id_employee")
  users_to_employee employee? @relation("employee_id_userTousers")
  employee_to_users employee? @relation("users_id_employeeToemployee", fields: [id_employee], references: [id], map: "fk_user_employee")
}
